    Java naming conventions.

    Ameerpet standard.
    class A {
        public int m1(int x, int y){
            return x + y;
        }
    }

    Hightech city standard.

    package com.yp.scjp
    public class  Calculator{
        public static int add(int number1, int number2){
            return number1 + number2;
        }
    }

 1. Why naming conventions?
    -> To improve readability and maintainability of code.
    
2. Class name in Java.
    -> In java class names are nouns of english language.
    -> It is start with Uppercase letter and inner word are also start with uppercase.
    -> Examples:- String, StringBuffer, Integer, Math.

3. Interface name in java.
    -> In java Interface names are Adjectives of english language.
    -> It is start with Uppercase letter and inner word are also start with uppercase.
    -> Example:- Runnable, Serializable, Comparable, RandomAccess.

4. Method name in java.
    -> In java method names are verbs of english language or verb-noun combination.
    -> It is start with a lowercase letter and inner words start with uppercase (CamelCase conventions).
    -> Example:- print, sqrt, setName, getName, sleep.

5. variable name in java.
    -> In java variable names are nouns of english language.
    -> It is start with a lowercase letter and inner words start with uppercase (CamelCase conventions).
    -> Example:- name, salary.

6. Constant name in java.
    -> In java Constants names are nouns of english language.
    -> It is contain only Uppercase and words are seperated by _.
    -> Example:- PI, MAX_VALUE, MIN_VALUE.

7. java Bean name.
    -> Class name ends with "Bean" keyword.
    -> what is bean?
        -> simple java class with private property and public getter and setter methods.


8. conventions for getter and setter methods.
    public class StudentBean{
        private String name;

        private boolean value;

        public void setName(String name){
            this.name = name;
        }
        public String getName(){
            return name;
        }

        public boolean getValue(){
            return value;
        }
                OR

        public boolean isValue(){
            return value;
        }

    } 
    1. Getter method conventions.
        -> It should be public method.
        -> Return type of getter method should not be void.
        -> method name prefixed with get and won't take any argument.

    2. Setter method conventions.
        -> It should be public method.
        -> Return type of setter method should be void.
        -> method name prefixed with set and take one argument.
    
    3. for boolean naming is bit different.
        -> in Above Example both are correct but more suitable is "isValue".
        