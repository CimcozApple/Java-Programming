
    Java main method in detail.

    public static void main(String[] args)

 -> main method protype is checked by JVM at run time. compiler won't check for main method in class whether it is present or not. 

1. Why method name is main? can we change it?
    -> main method called by JVM. 
    -> JVM always look for the below prototype.

    public static void main(String[] args)

    -> In JVM program the protype is set as above.
    -> If we want to change main method name then we have to change JVM configuration.


2. Why main method is public?

    -> Because JVM can access form anywhere. not based on it's location.

3. why main method is static?

    -> Because JVM can call main method without existing object of class.

4. Why main method return type is void?

    -> Because JVM call the main method and if we return any thing to JVM then we don't have access to that.
    -> So it is strictly void type.

5.  What is String[] args?

    -> it is command line argument which is strictly String array and args is the name of array.
    -> we can change args to any valid variable name we like to have.



-> main method Syntax is very strict.
-> we can change some Syntax of main method like "Access Modifiers".
-> public static void main(String[] args) to static public void main(String[] args).

6. Can we apply extra modifiers like final, synchronized, strictfp?

    -> Yes, we can apply final, synchronized, strictfp.

    //This is valid main method. 
    public static final synchronized strictfp void main(String[] args){

    }


7. valid main method Syntax.

    // Any valid array type is valid for main method.
    public static void main(String[] args){

    }

    public static void main(String args[]){
            
    }
    public static void main(String []args){
        
    }

    // Any order of access modifiers is  valid.
    static public void main(String[] args){
        
    }

    // Instade of one dimension array we can use var-arg.
    public static void main(String... args){
        
    }

    //Instade of args we can take any valid variable name.

    public static void main(String[] yomain){

    }


8. Three cases regarding main method.

    Case 1. main method can be overloaded.

        -> Method overloading is possible for main method but compiler always look for the String[] method only.
        -> Other overloaded main method we need to call explicitly.

        public class Test{
            public static void main(String[] args){

            }

            public static void main(int[] a){

            }
        }

    
    Case 2.  