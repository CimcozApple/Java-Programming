        Java Variables.


1. Division one
    -> Two types of variable based on the data represented by variable. 
        -> Primitive variables. int a = 10;
        -> reference variables. String s = new String("yp");

2. Division Two
    -> Three types of variable based on the declaration. 
        -> Instance variable.
        -> Static variable.
        -> local variable.


    1. Instance variable.
        -> variable declared directly inside a class outside the method, block and constructor are called instance variable.
        -> It can be Primitive or reference type.
        -> Separate copy will be created for each object.
        -> Scope of instance variable is same as a Scope of object.
        -> JVM will provide default value for instance variable.
        -> Instance variable is created at the time of object creation.
        -> Instance variable stored in a heap memory as a part of object.
        -> Instance variable are called as a object level Variables and attributes.
        -> We are not able access instance variable directly from the static context. we can make use of object to access instance variable in static context.
        -> we can access instance variable directly from the non-static context.
        
        public class Test{
            int x;
            double y;
            String z;
            public static void main(String[] args){
                System.out.println(x); //We get compile time error. because we are using instance variable inside static context.
                Test t = new Test();
                System.out.println(t.x); //0
                System.out.println(t.y); //0.0
                System.out.println(t.z); //null
            }

            //non static context.
            public void m1(){
                System.out.println(x); //0
                System.out.println(y); //0.0
                System.out.println(z); //null
            }
        }


    2. Static variable.
        -> variable with static keyword and declared directly inside a class outside the method, block and constructor are called static variable.
        -> It can be Primitive or reference type.
        -> one copy will be created and shared among the all object.
        -> Scope of static variable is same as a Scope of class.
        -> JVM will provide default value for static variable.
        -> static variable is created at the time of class loading.
        -> static variable stored in method memory.
        -> static variable are called as a class level Variables and fields.
        -> we can access static variable using class name as well as using object from the static and non static context.
        -> Inside the same class directly we can access static variable.

        public class Test{
            static int x;
            static double y;
            public static void main(String[] args){
                System.out.println(x); //0
                System.out.println(y); //0.0
                x = 10; //valid
                System.out.println(x); //10

                Test t1 = new Test();
                t1.x = 20;
                Test t2 = new Test();
                System.out.println(t2.x); // 20
                System.out.println(x); // 20
                System.out.println(Test.x); //20
            }
        }
    
    3. Local Variable.
        -> Variable declared inside any method, block or constructor to meet programmer requirement is called local variable.
        -> It can be Primitive or reference type.
        -> scope of local variable is inside block in which it is declared.
        -> JVM not provide any default value for local variable we need to initialize variable before use other wise we get compile time error.
        -> local variable created at the time of block execution.
        -> for local variable applicable access modifier is "final" only. we provide any other then we will get compile time error.
        -> local variable stored inside stack memory.
        -> for every execution Separate copy will be created for local variable.
        -> local variables are called as a temporary variable, stack variable.
        -> it is recomended to provide default value for local variable.

        public class Test{

            public static void main(String[] args){
                int x = 10;
                System.out.println(x); //10
                int y;
                System.out.println(y); // compile time error.
                int z;
                z = 20;
                System.out.println(z); //20
            }
        }

        public class Test{

            public static void main(String[] args){
                int x;
                if(args.length > 0){
                    x = 10;
                }
                System.out.println(x); // Compile time error
            }
        }



NOTE: ALL POSSIBLE COMBINATION OF VARIABLE IS 

        Instance     
                    Primitive
        Static                          TOTAL 6 COMBINATIONS ARE THERE.
                    Reference
        Local


NOTE: THREAD SAFETY

    Instance variable   -> NOT SAFE

    Static Variable     -> NOT SAFE

    Local variable      ->  SAFE